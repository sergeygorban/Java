package exceptions_25;

/* НЕПРОВЕРЯЕМЫЕ ИСКЛЮЧЕНИЯ

Не проверяемые исключения - это исключения, которые не
проверяет компилятор К таким исключениям относяться
все исключения класса RuntimeException и его наследники

В спецификации языка Java любое исключение, производное от класса Error или
RuntimeError, называется непроверяемым. Также к непроверяемым исключениям
относяться все исключения класса RuntimeException и его наследники

Такие исключения необязательно объявлять или заключать в
блок try/catch (хотя можно сделать и то и другое).

Любое исключение, унаследованное от RuntimeException, получает
полную свободу. Оно может быть выброшено где угодно,
с объявлениями и блоками try/ catch или без них.
Компилятора не волнует, может ли метод выбросить RuntimeException
и знает ли вызывающий код о возможности выброса такого
исключения при выполнении программы.
Большинство исключений типа RuntimeException возникают из-за
логики вашего кода, а не из-за ситуаций, происходящих при
выполнении программы, которые вы не можете предсказать
или предотвратить. */


public class ExceptionsUnchecked {

    // Объявление и Выбрасывание исключения

    public void createE(int a) {
        if (a < 1) {
            throw new RuntimeException("exception occurred");
        }
    }

    public static void main(String[] args) {
        ExceptionsUnchecked checked = new ExceptionsUnchecked();
        checked.createE(0);
    }

}

package inheritance_10;


/*
Один класс можно построить на основе других классов.
В этом случае говорят, что новый класс расширяет тот
класс, на основе которого он создан. Если класс
разрабатывается на основе уже существующего, то новый
класс содержит все свойства и методы расширяемого класса.
Кроме того, в него добавляются новые методы и поля данных.
Расширение класса и получение на его основе нового
называется наследованием. Принцип наследования состоит в том,
что новые классы можно создавать из уже существующих классов.
Класс от которого наследуется другой класс, называется суперклассом,
базовым или родительским. Функциональные возможности подкласса шире,
чем у суперкласса.

Иерархия наследования - совокупность всех классов,
производных от общего суперкласса

Для обозначения наследования в Java служит ключевое слово extends.

Между классами существуют три общих вида отношений:

    1 Наследование ("является — чем-то").
    2 Агрегирование ("содержит — что-то").
    3 Зависимость ("использует — что-то").

1. Наследование - отношение между конкретным и более общим классом.
Для того чтобы узнать, расширяет ли одна сущность другую,
необходимо выполнить проверку на соответствие — IS-A (является).
Треугольник IS A  фигура. Все правильно.
Кошка IS A представитель семейства кошачьих. Это тоже нормально.

Если иерархия спроектирована должным образом, то проверка на
соответствие будет иметь смысл в контексте любого родительского
класса и любых его подклассов. Если класс В расширяет класс А, то класс В
соответствует классу А. Это утверждение истинно на лвобом участке иерархии
наследования. Если класс С расширяет класс Bто он проходит проверку
на соответствие обоим классам — В и А.

2. Агрегирование означает, что объект класса А содержит объекты класса В.
Например, объект типа Order может содержать объекты типа Item.

К примеру, логично сказать, что ванная комната содержит ванну. Если
ответ положительный, значит, класс Bathroom имеет переменную типа Tub.
Иными словами, класс Bathroom содержит ссылку на класс Tub,
но не расширяет его (и наоборот).

3. Зависимость: Один класс зависит от другого класса, если его
методы выполняют какие-нибудь действия над экземплярами этого класса.

Каждый класс в языке Java — наследник класса Object. Класс Object — прародитель всех
классов; это родительский класс для всего.

Унаследованные методы могут быть переопределены. Переменные
экземпляра не могут быть переопределены (хотя их можно заново
объявить в классе, но этого почти никогда не требуется)

Полиморфизм - Способность переменной ссылаться на объекты, имеющие разные
фактические типы.

*/

public class Animal {

    private String picture;
    private String food;
    private int hunger;
    private float boundaries;
    private int location;

    public String name = "Animal";

    public Animal() {

    }

    public Animal(String name) {
        this.name = name;
    }

    public void makeNoise() {
        System.out.println("Method from class Animal");
    }

    public void eat() {
        System.out.println("Method from class Animal");
    }

    public void sleep() {
        System.out.println("Method from class Animal");
    }

    public String roam() {
        String a = "Method from class Animal";
        return a;
    }

    public String getName(Animal animal) {
        return animal.name;
    }

    public String getName() {
        return name;
    }
}

package dataStructures_20;

/* В состав библиотеки коллекций Java входит ряд классов отображений для специальных нужд. Они будут вкратце описаны в последующих разделах.
Класс WeakHashMap был разработан для решения одной интересной задачи. Что
произойдет со значением, ключ которого не используется нигде больше в программе?
Допустим, последняя ссылка на ключ исчезла. Следовательно, не остается никакого
способа сослаться на объект-значение. Но поскольку ни одна часть программы больше
не содержит обращения к данному ключу, то и соответствующая пара "ключ-значение" не может быть удалена из отображения. Почему бы системе сборки "мусора" не
удалить эту пару? Разве это не ее задача — удалять неиспользуемые объекты?
К сожалению, все не так просто. Система сборки "мусора" отслеживает действующие объекты. До тех пор, пока действует объект хеш-отображения, все группы в нем
активны и не могут быть освобождены из памяти. Поэтому прикладная программа должна позаботиться об удалении неиспользуемых значений из долгосрочных
отображений. С другой стороны, можно воспользоваться структурой данных типа
WeakHashMap, которая взаимодействует с системой сборки "мусора" для удаления
пар "ключ-значение", когда единственной ссылкой на ключ остается ссылка из элемента хеш-таблицы.
Поясним принцип действия этого механизма. В хеш-отображении типа WeakHashMap
используются слабые ссылки для хранения ключей. Объект типа WeakHashMap содержит
ссылку на другой объект (в данном случае ключ из хеш-таблицы). Объекты этого типа
интерпретируются системой сборки "мусора" особым образом. Если система сборки
"мусора" обнаруживает отсутствие ссылок на конкретный объект, то она, как правило, освобождает занятую им память. А если объект доступен только из хеш-отображения типа WeakHashMap, то система сборки "мусора" освобождает и его, но размещает
в очереди слабую ссылку на него. В операциях, выполняемых над хеш-отображением
типа WeakHashMap, эта очередь периодически проверяется на предмет появления новых слабых ссылок. Появление такой ссылки в очереди свидетельствует о том, что ключ
больше не используется нигде, но по-прежнему хранится в коллекции. В таком случае
связанный с ним элемент удаляется из хеш-отображения типа WeakHashMap.


*/
public class WeakHashMapMy {
}

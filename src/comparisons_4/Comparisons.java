package comparisons_4;

/*
В методе equals() из класса Object проверяется, равны ли два объекта.
А поскольку метод equals() реализован в классе Object, то в нем
определяется только следующее: ссылаются ли переменные на один и тот же объект
в области памяти.

Спецификация Java требует, чтобы метод equals() обладал следующими характеристиками:
    1. Рефлексивность. При вызове х.equals(х) по любой ненулевой ссылке х
    должно возвращаться логическое значение true.
    2. Симметричность. При вызове х.equals(у) по любым ссылкам х и у должно
    возвращаться логическое значение tru e тогда и только тогда, когда при вызове
    у.equals(х) возвращается логическое значение true.
    3. Транзитивность. Если при вызовах х.equals(у) и у.equals(z) по любым
    ссылкам х, у и z возвращается логическое значение true , то и при вызове
    х.equals(z) возвращается логическое значение true.
    4. Согласованность. Если объекты, на которые делаются ссылки х и у,
    не изменяются, то при повторном вызове х.equals(у) должно возвращаться то
    же самое значение. При вызове х.equals(null) по любой непустой ссылке х
    должно возвращаться логическое значение false .

Используйте оператор ==, чтобы сравнить примитивы
 или проверить, ссылаються ли переменные на один и
 тот же объект

Используйте метод equals() для проверки идентичности
двух разных объектов.
*/


public class Comparisons {

    private String name;

    public Comparisons(String name) {
        this.name = name;
    }

    public static void main(String[] args) {

        int a = 3;
        int b = 3;

        Comparisons comparisons = new Comparisons("Vas");
        Comparisons comparisons1 = new Comparisons("Vasdas");
        Comparisons comparisons2 = comparisons;

        if (a == b) {
            System.out.println("True");
        }

        if (comparisons == comparisons2) {
            System.out.println("True");
        }
    }
}

package string_19;

/* Ћюба€ больша€ программа на €зыке Java содержит множество объектов типа String.
¬ цел€х безопасности и дл€ сохранени€ пам€ти (помните, что ваши Java-программы
могут работать на крошечных телефонах) строки в Java неизмен€емы.
 аждый раз, когда вы создаете новую строку, JVM помещает ее в специальную
область пам€ти, известную как Ђпул строковых константї (String pool), эта пам€ть находитьс€
в куче. ≈сли в строковом пуле уже хранитс€ строка с тем же
значением, то JVM не станет создавать дубликат, а просто сделает так, чтобы переменна€
ссылалась на существующую запись. Ёто возможно благодар€ неизменности строк.
ќдна ссылочна€ переменна€ не может изменить значение строки, на которую
ссылаетс€ друга€ переменна€.
≈ще одна особенность пула строковых констант заключаетс€ в том, что на него
не распростран€етс€ действие сборщика мусора.

 огда мы используем двойные кавычки, чтобы создать новую строку, то первым
делом идет поиск строки с таким же значением в пуле строк. ≈сли java такую
строку нашла, то возвращает ссылку, в противном случае создаетс€ нова€ строка
в пуле, а затем возвращаетс€ ссылка.
ќднако использование оператора new заставл€ет класс String создать новый
объект String. ѕосле этого можем использовать метод intern(), чтобы поместить
этот объект в пул строк или обратитьс€ к другому объекту из пула строк,
который имеет такое же значение.
*/


public class StringMy {


    public static void main(String[] args) {

        String q = "asasas";

        // –азмер строки в байтах
        System.out.println(q.getBytes().length);

        String a = "Cat";
        String b = "Dog";
        String c = new String("Cat");

        /* —троки не равны, так как создан новый объект, а не
        вз€то значение из пула*/

        if (a == c) {
            System.out.println("True");
        } else {
            System.out.println("False");
        }
    }
}

package constructors_9;

/* 1. super() используетс€ дл€ вызова конструктора
родительского класса. ≈сли в классе отсутствует
конструктор: то компил€тор
сам добавл€ет следующую запись

    public Dog() {
        super();
    }
и вызывает конструктор родительского класса вплоть до Object

2. ≈сли в классе создан конструктор, но не используетс€ super(),
то компил€тор поместит вызовы super() в каждый ваш перегруженный
конструктор, если только конструктор не вызывает
другой перегруженный конструктор. Ёти вызовы всегда будут
выгл€деть так: super();

Ѕлагод€р€ тому, что компил€тор сам добавл€ет super(), происходит
формирование частей родительских класов в первую очередь, а потом
уже дочерний

 аждый конструктор может иметь либо вызов this(), либо super(), но не оба сразу!

super() также используетс€ дл€ вызова родительского метода */

public class ConstSuper extends Constructors {


    /* ¬ызов конструктора родительского класса */
    public ConstSuper(int weight) {
        super(weight);
    }
}
